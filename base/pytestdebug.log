versions pytest-3.1.0, py-1.4.33, python-3.6.1.final.0
cwd=/Users/akhterali/Documents/Udemy/SaltStack/saltstates/base
args=['--debug', '-vvv', 'test/integration/default']

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x108dc46a0>
    pytest_plugin_registered [hook]
        plugin: <Session 'base'>
        manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x108dc46a0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x1092c7550>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
      finish pytest_plugin_registered --> [] [hook]
    find_module called for: py._io [assertion]
    find_module called for: py._io.terminalwriter [assertion]
    find_module called for: termios [assertion]
    find_module called for: fcntl [assertion]
      pytest_logwarning [hook]
          code: P1
          message: Module already imported so can not be re-written: testinfra
          fslocation: None
          nodeid: None
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'code': 'P1', 'message': 'Module already imported so can not be re-written: testinfra', 'fslocation': None, 'nodeid': None, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_logwarning --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.config.PytestPluginManager object at 0x108d47be0>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x108dc46a0>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.config.Config object at 0x108dc46a0>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/usr/local/lib/python3.6/site-packages/_pytest/mark.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.mark' from '/usr/local/lib/python3.6/site-packages/_pytest/mark.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/usr/local/lib/python3.6/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.main' from '/usr/local/lib/python3.6/site-packages/_pytest/main.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/usr/local/lib/python3.6/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.terminal' from '/usr/local/lib/python3.6/site-packages/_pytest/terminal.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/usr/local/lib/python3.6/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.runner' from '/usr/local/lib/python3.6/site-packages/_pytest/runner.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/usr/local/lib/python3.6/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.python' from '/usr/local/lib/python3.6/site-packages/_pytest/python.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/usr/local/lib/python3.6/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.fixtures' from '/usr/local/lib/python3.6/site-packages/_pytest/fixtures.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/usr/local/lib/python3.6/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.debugging' from '/usr/local/lib/python3.6/site-packages/_pytest/debugging.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/usr/local/lib/python3.6/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.unittest' from '/usr/local/lib/python3.6/site-packages/_pytest/unittest.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/usr/local/lib/python3.6/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.capture' from '/usr/local/lib/python3.6/site-packages/_pytest/capture.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/usr/local/lib/python3.6/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.skipping' from '/usr/local/lib/python3.6/site-packages/_pytest/skipping.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/usr/local/lib/python3.6/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.tmpdir' from '/usr/local/lib/python3.6/site-packages/_pytest/tmpdir.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/usr/local/lib/python3.6/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.monkeypatch' from '/usr/local/lib/python3.6/site-packages/_pytest/monkeypatch.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/usr/local/lib/python3.6/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.recwarn' from '/usr/local/lib/python3.6/site-packages/_pytest/recwarn.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/usr/local/lib/python3.6/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.pastebin' from '/usr/local/lib/python3.6/site-packages/_pytest/pastebin.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/usr/local/lib/python3.6/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.helpconfig' from '/usr/local/lib/python3.6/site-packages/_pytest/helpconfig.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/usr/local/lib/python3.6/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.nose' from '/usr/local/lib/python3.6/site-packages/_pytest/nose.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/usr/local/lib/python3.6/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.assertion' from '/usr/local/lib/python3.6/site-packages/_pytest/assertion/__init__.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/usr/local/lib/python3.6/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.junitxml' from '/usr/local/lib/python3.6/site-packages/_pytest/junitxml.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.resultlog' from '/usr/local/lib/python3.6/site-packages/_pytest/resultlog.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.resultlog' from '/usr/local/lib/python3.6/site-packages/_pytest/resultlog.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/usr/local/lib/python3.6/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.doctest' from '/usr/local/lib/python3.6/site-packages/_pytest/doctest.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/usr/local/lib/python3.6/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.cacheprovider' from '/usr/local/lib/python3.6/site-packages/_pytest/cacheprovider.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/usr/local/lib/python3.6/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.freeze_support' from '/usr/local/lib/python3.6/site-packages/_pytest/freeze_support.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/usr/local/lib/python3.6/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.setuponly' from '/usr/local/lib/python3.6/site-packages/_pytest/setuponly.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/usr/local/lib/python3.6/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.setupplan' from '/usr/local/lib/python3.6/site-packages/_pytest/setupplan.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/usr/local/lib/python3.6/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.warnings' from '/usr/local/lib/python3.6/site-packages/_pytest/warnings.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'testinfra.plugin' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x108eb6dd8>)>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module 'testinfra.plugin' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x108eb6dd8>)>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.capture.CaptureManager object at 0x10928bcc0>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.capture.CaptureManager object at 0x10928bcc0>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x108eb6dd8>)>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module 'conftest' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x108eb6dd8>)>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session 'base'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <Session 'base'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x1092c7550>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.cacheprovider.LFPlugin object at 0x1092c7550>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x1092c7160>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session 'base'>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.config.PytestPluginManager object at 0x108d47be0>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x108dc46a0>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.config.Config object at 0x108dc46a0>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/usr/local/lib/python3.6/site-packages/_pytest/mark.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.mark' from '/usr/local/lib/python3.6/site-packages/_pytest/mark.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/usr/local/lib/python3.6/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.main' from '/usr/local/lib/python3.6/site-packages/_pytest/main.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/usr/local/lib/python3.6/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.terminal' from '/usr/local/lib/python3.6/site-packages/_pytest/terminal.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/usr/local/lib/python3.6/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.runner' from '/usr/local/lib/python3.6/site-packages/_pytest/runner.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/usr/local/lib/python3.6/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.python' from '/usr/local/lib/python3.6/site-packages/_pytest/python.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/usr/local/lib/python3.6/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.fixtures' from '/usr/local/lib/python3.6/site-packages/_pytest/fixtures.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/usr/local/lib/python3.6/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.debugging' from '/usr/local/lib/python3.6/site-packages/_pytest/debugging.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/usr/local/lib/python3.6/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.unittest' from '/usr/local/lib/python3.6/site-packages/_pytest/unittest.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/usr/local/lib/python3.6/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.capture' from '/usr/local/lib/python3.6/site-packages/_pytest/capture.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/usr/local/lib/python3.6/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.skipping' from '/usr/local/lib/python3.6/site-packages/_pytest/skipping.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/usr/local/lib/python3.6/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.tmpdir' from '/usr/local/lib/python3.6/site-packages/_pytest/tmpdir.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/usr/local/lib/python3.6/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.monkeypatch' from '/usr/local/lib/python3.6/site-packages/_pytest/monkeypatch.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/usr/local/lib/python3.6/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.recwarn' from '/usr/local/lib/python3.6/site-packages/_pytest/recwarn.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/usr/local/lib/python3.6/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.pastebin' from '/usr/local/lib/python3.6/site-packages/_pytest/pastebin.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/usr/local/lib/python3.6/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.helpconfig' from '/usr/local/lib/python3.6/site-packages/_pytest/helpconfig.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/usr/local/lib/python3.6/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.nose' from '/usr/local/lib/python3.6/site-packages/_pytest/nose.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/usr/local/lib/python3.6/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.assertion' from '/usr/local/lib/python3.6/site-packages/_pytest/assertion/__init__.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/usr/local/lib/python3.6/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.junitxml' from '/usr/local/lib/python3.6/site-packages/_pytest/junitxml.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.resultlog' from '/usr/local/lib/python3.6/site-packages/_pytest/resultlog.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.resultlog' from '/usr/local/lib/python3.6/site-packages/_pytest/resultlog.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/usr/local/lib/python3.6/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.doctest' from '/usr/local/lib/python3.6/site-packages/_pytest/doctest.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/usr/local/lib/python3.6/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.cacheprovider' from '/usr/local/lib/python3.6/site-packages/_pytest/cacheprovider.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/usr/local/lib/python3.6/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.freeze_support' from '/usr/local/lib/python3.6/site-packages/_pytest/freeze_support.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/usr/local/lib/python3.6/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.setuponly' from '/usr/local/lib/python3.6/site-packages/_pytest/setuponly.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/usr/local/lib/python3.6/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.setupplan' from '/usr/local/lib/python3.6/site-packages/_pytest/setupplan.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/usr/local/lib/python3.6/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.warnings' from '/usr/local/lib/python3.6/site-packages/_pytest/warnings.py'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'testinfra.plugin' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x108eb6dd8>)>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module 'testinfra.plugin' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x108eb6dd8>)>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.capture.CaptureManager object at 0x10928bcc0>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.capture.CaptureManager object at 0x10928bcc0>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x108eb6dd8>)>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module 'conftest' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x108eb6dd8>)>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session 'base'>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <Session 'base'>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x1092c7550>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.cacheprovider.LFPlugin object at 0x1092c7550>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x1092c7160>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.terminal.TerminalReporter object at 0x1092c7160>, 'manager': <_pytest.config.PytestPluginManager object at 0x108d47be0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>}>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x1092cfe10>
          manager: <_pytest.config.PytestPluginManager object at 0x108d47be0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x108dc46a0>
          startdir: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base
      finish pytest_report_header --> [['rootdir: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base, inifile:', 'plugins: testinfra-1.6.3'], 'cachedir: .cache', ['using: pytest-3.1.0 pylib-1.4.33', 'setuptools registered plugins:', '  testinfra-1.6.3 at /usr/local/lib/python3.6/site-packages/testinfra/plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session 'base'>
    perform_collect <Session 'base'> ['test/integration/default'] [collection]
        pytest_collectstart [hook]
            collector: <Session 'base'>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session 'base'>
        processing argument /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default [collection]
            pytest_ignore_collect [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra
                config: <_pytest.config.Config object at 0x108dc46a0>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra
                parent: <Session 'base'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/.cache
                config: <_pytest.config.Config object at 0x108dc46a0>
            finish pytest_ignore_collect --> False [hook]
            pytest_ignore_collect [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/.kitchen
                config: <_pytest.config.Config object at 0x108dc46a0>
            finish pytest_ignore_collect --> False [hook]
            pytest_ignore_collect [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/__pycache__
                config: <_pytest.config.Config object at 0x108dc46a0>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/__pycache__
                parent: <Session 'base'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/pytestdebug.log
                config: <_pytest.config.Config object at 0x108dc46a0>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/pytestdebug.log
                parent: <Session 'base'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/test_flask_port.py
                config: <_pytest.config.Config object at 0x108dc46a0>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/test_flask_port.py
                parent: <Session 'base'>
              pytest_pycollect_makemodule [hook]
                  path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/test_flask_port.py
                  parent: <Session 'base'>
              finish pytest_pycollect_makemodule --> <Module 'test/integration/default/testinfra/test_flask_port.py'> [hook]
            finish pytest_collect_file --> [<Module 'test/integration/default/testinfra/test_flask_port.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/__pycache__/test_flask_port.cpython-27-PYTEST.pyc
                config: <_pytest.config.Config object at 0x108dc46a0>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/__pycache__/test_flask_port.cpython-27-PYTEST.pyc
                parent: <Session 'base'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/__pycache__/test_flask_port.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x108dc46a0>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/__pycache__/test_flask_port.cpython-36-PYTEST.pyc
                parent: <Session 'base'>
            finish pytest_collect_file --> [] [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module 'test/integration/default/testinfra/test_flask_port.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
      find_module called for: test_flask_port [assertion]
      matched test file '/Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/test_flask_port.py' [assertion]
      found cached rewritten pyc for '/Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/test_flask_port.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __name__
            obj: test_flask_port
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x108eb6dd8>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __spec__
            obj: ModuleSpec(name='test_flask_port', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x108eb6dd8>)
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __file__
            obj: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/test_flask_port.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __cached__
            obj: /Users/akhterali/Documents/Udemy/SaltStack/saltstates/base/test/integration/default/testinfra/__pycache__/test_flask_port.cpython-36-PYTEST.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'BufferError': <class 'BufferError'>, 'MemoryError': <class 'MemoryError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2017 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.6/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: test_port_8000_is_listening
            obj: <function test_port_8000_is_listening at 0x109331620>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x10929ef28>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_port_8000_is_listening'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: test_apache_server_is_running
            obj: <function test_apache_server_is_running at 0x109331488>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x1092aa4e0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_apache_server_is_running'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x1083e6290>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test/integration/default/testinfra/test_flask_port.py'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'test/integration/default/testinfra/test_flask_port.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function 'test_port_8000_is_listening'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_port_8000_is_listening'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_apache_server_is_running'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_apache_server_is_running'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test/integration/default/testinfra/test_flask_port.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session 'base'>
          config: <_pytest.config.Config object at 0x108dc46a0>
          items: [<Function 'test_port_8000_is_listening'>, <Function 'test_apache_server_is_running'>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session 'base'>
        pytest_logwarning [hook]
            code: C1
            message: Service fixture is deprecated. Use host fixture and get Service module with host.service
            fslocation: None
            nodeid: None
        finish pytest_logwarning --> [] [hook]
        pytest_logwarning [hook]
            code: C1
            message: Socket fixture is deprecated. Use host fixture and get Socket module with host.socket
            fslocation: None
            nodeid: None
        finish pytest_logwarning --> [] [hook]
        pytest_logwarning [hook]
            code: C1
            message: TestinfraBackend fixture is deprecated. Use host fixture and get backend with host.backend
            fslocation: None
            nodeid: None
        finish pytest_logwarning --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> [<Function 'test_port_8000_is_listening'>, <Function 'test_apache_server_is_running'>] [hook]
    pytest_runtestloop [hook]
        session: <Session 'base'>
      pytest_runtest_protocol [hook]
          item: <Function 'test_port_8000_is_listening'>
          nextitem: <Function 'test_apache_server_is_running'>
        pytest_runtest_logstart [hook]
            nodeid: test/integration/default/testinfra/test_flask_port.py::test_port_8000_is_listening
            location: ('test/integration/default/testinfra/test_flask_port.py', 0, 'test_port_8000_is_listening')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_port_8000_is_listening'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='tmpdir_factory' scope='session' baseid='' >
              request: <SubRequest 'tmpdir_factory' for <Function 'test_port_8000_is_listening'>>
          finish pytest_fixture_setup --> <_pytest.tmpdir.TempdirFactory object at 0x1092c7b38> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='tmpdir' scope='function' baseid='' >
              request: <SubRequest 'tmpdir' for <Function 'test_port_8000_is_listening'>>
          find_module called for: py._std [assertion]
          find_module called for: getpass [assertion]
          new basetemp /private/var/folders/fk/195yfz4d0dqgzvmrl79jwzn80000gn/T/pytest-of-akhterali/pytest-81 [config:tmpdir]
          mktemp /private/var/folders/fk/195yfz4d0dqgzvmrl79jwzn80000gn/T/pytest-of-akhterali/pytest-81/test_port_8000_is_listening0 [config:tmpdir]
          finish pytest_fixture_setup --> /private/var/folders/fk/195yfz4d0dqgzvmrl79jwzn80000gn/T/pytest-of-akhterali/pytest-81/test_port_8000_is_listening0 [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='host' scope='function' baseid='test' >
              request: <SubRequest 'host' for <Function 'test_port_8000_is_listening'>>
          find_module called for: testinfra.backend.paramiko [assertion]
          matched marked file 'testinfra.backend.paramiko' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/local/lib/python3.6/site-packages/testinfra/backend/paramiko.py' [assertion]
          find_module called for: paramiko [assertion]
          find_module called for: paramiko._version [assertion]
          find_module called for: paramiko.transport [assertion]
          find_module called for: cryptography [assertion]
          find_module called for: cryptography.__about__ [assertion]
          find_module called for: cryptography.hazmat [assertion]
          find_module called for: cryptography.hazmat.backends [assertion]
          find_module called for: cryptography.hazmat.backends.multibackend [assertion]
          find_module called for: cryptography.utils [assertion]
          find_module called for: cryptography.exceptions [assertion]
          find_module called for: cryptography.hazmat.backends.interfaces [assertion]
          find_module called for: cryptography.hazmat.primitives [assertion]
          find_module called for: cryptography.hazmat.primitives.ciphers [assertion]
          find_module called for: cryptography.hazmat.primitives.ciphers.base [assertion]
          find_module called for: cffi [assertion]
          find_module called for: cffi.api [assertion]
          find_module called for: cffi.lock [assertion]
          find_module called for: cffi.error [assertion]
          find_module called for: cffi.model [assertion]
          find_module called for: cryptography.hazmat.primitives.ciphers.modes [assertion]
          find_module called for: cryptography.hazmat.primitives.ciphers.algorithms [assertion]
          find_module called for: paramiko.util [assertion]
          find_module called for: paramiko.common [assertion]
          find_module called for: paramiko.py3compat [assertion]
          find_module called for: paramiko.config [assertion]
          find_module called for: paramiko.auth_handler [assertion]
          find_module called for: paramiko.message [assertion]
          find_module called for: paramiko.ssh_exception [assertion]
          find_module called for: paramiko.server [assertion]
          find_module called for: paramiko.ssh_gss [assertion]
          find_module called for: pyasn1 [assertion]
          find_module called for: pyasn1.type [assertion]
          find_module called for: pyasn1.type.univ [assertion]
          find_module called for: pyasn1.type.base [assertion]
          find_module called for: pyasn1.type.constraint [assertion]
          find_module called for: pyasn1.type.error [assertion]
          find_module called for: pyasn1.error [assertion]
          find_module called for: pyasn1.type.tagmap [assertion]
          find_module called for: pyasn1.type.tag [assertion]
          find_module called for: pyasn1.type.namedtype [assertion]
          find_module called for: pyasn1.compat [assertion]
          find_module called for: pyasn1.compat.octets [assertion]
          find_module called for: pyasn1.type.namedval [assertion]
          find_module called for: pyasn1.codec [assertion]
          find_module called for: pyasn1.codec.ber [assertion]
          find_module called for: pyasn1.codec.ber.eoo [assertion]
          find_module called for: pyasn1.compat.integer [assertion]
          find_module called for: pyasn1.compat.binary [assertion]
          find_module called for: pyasn1.codec.der [assertion]
          find_module called for: pyasn1.codec.der.encoder [assertion]
          find_module called for: pyasn1.codec.cer [assertion]
          find_module called for: pyasn1.codec.cer.encoder [assertion]
          find_module called for: pyasn1.type.useful [assertion]
          find_module called for: pyasn1.type.char [assertion]
          find_module called for: pyasn1.codec.ber.encoder [assertion]
          find_module called for: pyasn1.debug [assertion]
          find_module called for: pyasn1.codec.der.decoder [assertion]
          find_module called for: pyasn1.codec.cer.decoder [assertion]
          find_module called for: pyasn1.codec.ber.decoder [assertion]
          find_module called for: gssapi [assertion]
          find_module called for: sspicon [assertion]
          find_module called for: paramiko.channel [assertion]
          find_module called for: paramiko.file [assertion]
          find_module called for: paramiko.buffered_pipe [assertion]
          find_module called for: array [assertion]
          find_module called for: paramiko.pipe [assertion]
          find_module called for: paramiko.compress [assertion]
          find_module called for: paramiko.dsskey [assertion]
          find_module called for: cryptography.hazmat.primitives.hashes [assertion]
          find_module called for: cryptography.hazmat.primitives.serialization [assertion]
          find_module called for: cryptography.hazmat.primitives.asymmetric [assertion]
          find_module called for: cryptography.hazmat.primitives.asymmetric.dsa [assertion]
          find_module called for: cryptography.hazmat.primitives.asymmetric.ec [assertion]
          find_module called for: cryptography.hazmat.primitives.asymmetric.rsa [assertion]
          find_module called for: fractions [assertion]
          find_module called for: decimal [assertion]
          find_module called for: _decimal [assertion]
          find_module called for: numbers [assertion]
          find_module called for: cryptography.hazmat.primitives.asymmetric.utils [assertion]
          find_module called for: asn1crypto [assertion]
          find_module called for: asn1crypto.version [assertion]
          find_module called for: asn1crypto.algos [assertion]
          find_module called for: asn1crypto._errors [assertion]
          find_module called for: asn1crypto._int [assertion]
          find_module called for: asn1crypto.util [assertion]
          find_module called for: asn1crypto._iri [assertion]
          find_module called for: encodings.idna [assertion]
          find_module called for: stringprep [assertion]
          find_module called for: unicodedata [assertion]
          find_module called for: asn1crypto._types [assertion]
          find_module called for: asn1crypto._ordereddict [assertion]
          find_module called for: asn1crypto._ffi [assertion]
          find_module called for: ctypes [assertion]
          find_module called for: _ctypes [assertion]
          find_module called for: ctypes._endian [assertion]
          find_module called for: asn1crypto._perf [assertion]
          find_module called for: asn1crypto._perf._big_num_ctypes [assertion]
          find_module called for: ctypes.util [assertion]
          find_module called for: ctypes.macholib [assertion]
          find_module called for: ctypes.macholib.dyld [assertion]
          find_module called for: ctypes.macholib.framework [assertion]
          find_module called for: ctypes.macholib.dylib [assertion]
          find_module called for: asn1crypto.core [assertion]
          find_module called for: asn1crypto._teletex_codec [assertion]
          find_module called for: asn1crypto.parser [assertion]
          find_module called for: paramiko.ber [assertion]
          find_module called for: paramiko.pkey [assertion]
          find_module called for: paramiko.kex_gex [assertion]
          find_module called for: paramiko.kex_group1 [assertion]
          find_module called for: paramiko.kex_group14 [assertion]
          find_module called for: paramiko.kex_gss [assertion]
          find_module called for: paramiko.packet [assertion]
          find_module called for: hmac [assertion]
          find_module called for: paramiko.primes [assertion]
          find_module called for: paramiko.rsakey [assertion]
          find_module called for: cryptography.hazmat.primitives.asymmetric.padding [assertion]
          find_module called for: paramiko.ecdsakey [assertion]
          find_module called for: paramiko.sftp_client [assertion]
          find_module called for: paramiko.sftp [assertion]
          find_module called for: paramiko.sftp_attr [assertion]
          find_module called for: paramiko.sftp_file [assertion]
          find_module called for: paramiko.client [assertion]
          find_module called for: paramiko.agent [assertion]
          find_module called for: paramiko.hostkeys [assertion]
          find_module called for: paramiko.resource [assertion]
          find_module called for: paramiko.sftp_server [assertion]
          find_module called for: paramiko.sftp_si [assertion]
          find_module called for: paramiko.sftp_handle [assertion]
          find_module called for: paramiko.proxy [assertion]
          find_module called for: testinfra.backend.base [assertion]
          matched marked file 'testinfra.backend.base' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/local/lib/python3.6/site-packages/testinfra/backend/base.py' [assertion]
          find_module called for: pipes [assertion]
          finish pytest_fixture_setup --> <testinfra.host.Host object at 0x1092aa668> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope='function' baseid='' >
              request: <SubRequest 'TestinfraBackend' for <Function 'test_port_8000_is_listening'>>
          finish pytest_fixture_setup --> <testinfra.backend.paramiko.ParamikoBackend object at 0x1092a7e80> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='Socket' scope='function' baseid='' >
              request: <SubRequest 'Socket' for <Function 'test_port_8000_is_listening'>>
          find_module called for: testinfra.modules.socket [assertion]
          matched marked file 'testinfra.modules.socket' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/local/lib/python3.6/site-packages/testinfra/modules/socket.py' [assertion]
          find_module called for: testinfra.modules.base [assertion]
          matched marked file 'testinfra.modules.base' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/local/lib/python3.6/site-packages/testinfra/modules/base.py' [assertion]
          find_module called for: testinfra.modules.systeminfo [assertion]
          matched marked file 'testinfra.modules.systeminfo' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/local/lib/python3.6/site-packages/testinfra/modules/systeminfo.py' [assertion]
          find_module called for: cryptography.hazmat.backends.commoncrypto [assertion]
          find_module called for: cryptography.hazmat.backends.commoncrypto.backend [assertion]
          find_module called for: cryptography.hazmat.backends.commoncrypto.ciphers [assertion]
          find_module called for: cryptography.hazmat.primitives.constant_time [assertion]
          find_module called for: cryptography.hazmat.bindings [assertion]
          find_module called for: cryptography.hazmat.bindings._constant_time [assertion]
          find_module called for: _cffi_backend [assertion]
          find_module called for: cryptography.hazmat.backends.commoncrypto.hashes [assertion]
          find_module called for: cryptography.hazmat.backends.commoncrypto.hmac [assertion]
          find_module called for: cryptography.hazmat.primitives.interfaces [assertion]
          find_module called for: cryptography.hazmat.bindings.commoncrypto [assertion]
          find_module called for: cryptography.hazmat.bindings.commoncrypto.binding [assertion]
          find_module called for: cryptography.hazmat.bindings._commoncrypto [assertion]
          find_module called for: cryptography.hazmat.backends.openssl [assertion]
          find_module called for: cryptography.hazmat.backends.openssl.backend [assertion]
          find_module called for: cryptography.x509 [assertion]
          find_module called for: cryptography.x509.base [assertion]
          find_module called for: cryptography.x509.extensions [assertion]
          find_module called for: ipaddress [assertion]
          find_module called for: asn1crypto.keys [assertion]
          find_module called for: asn1crypto._elliptic_curve [assertion]
          find_module called for: cryptography.x509.general_name [assertion]
          find_module called for: idna [assertion]
          find_module called for: idna.core [assertion]
          find_module called for: idna.idnadata [assertion]
          find_module called for: idna.intranges [assertion]
          find_module called for: cryptography.x509.name [assertion]
          find_module called for: cryptography.x509.oid [assertion]
          find_module called for: cryptography.hazmat.backends.openssl.ciphers [assertion]
          find_module called for: cryptography.hazmat.backends.openssl.cmac [assertion]
          find_module called for: cryptography.hazmat.backends.openssl.dh [assertion]
          find_module called for: cryptography.hazmat.primitives.asymmetric.dh [assertion]
          find_module called for: cryptography.hazmat.backends.openssl.dsa [assertion]
          find_module called for: cryptography.hazmat.backends.openssl.utils [assertion]
          find_module called for: cryptography.hazmat.backends.openssl.ec [assertion]
          find_module called for: cryptography.hazmat.backends.openssl.encode_asn1 [assertion]
          find_module called for: cryptography.hazmat.backends.openssl.decode_asn1 [assertion]
          find_module called for: cryptography.hazmat.backends.openssl.hashes [assertion]
          find_module called for: cryptography.hazmat.backends.openssl.hmac [assertion]
          find_module called for: cryptography.hazmat.backends.openssl.rsa [assertion]
          find_module called for: cryptography.hazmat.backends.openssl.x509 [assertion]
          find_module called for: cryptography.hazmat.bindings.openssl [assertion]
          find_module called for: cryptography.hazmat.bindings.openssl.binding [assertion]
          find_module called for: cryptography.hazmat.bindings._openssl [assertion]
          find_module called for: cryptography.hazmat.bindings.openssl._conditional [assertion]
          find_module called for: _ssl [assertion]
          find_module called for: cryptography.hazmat.primitives.kdf [assertion]
          find_module called for: cryptography.hazmat.primitives.kdf.scrypt [assertion]
          finish pytest_fixture_setup --> <class 'testinfra.modules.base.LinuxSocket'> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_port_8000_is_listening'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_port_8000_is_listening' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_port_8000_is_listening' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_port_8000_is_listening' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_port_8000_is_listening'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_port_8000_is_listening'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_port_8000_is_listening'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_port_8000_is_listening' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_port_8000_is_listening' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_port_8000_is_listening' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_port_8000_is_listening'>
            nextitem: <Function 'test_apache_server_is_running'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='Socket' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='Socket' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='host' scope='function' baseid='test' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='host' scope='function' baseid='test' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='tmpdir' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_port_8000_is_listening'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_port_8000_is_listening' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_port_8000_is_listening' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_port_8000_is_listening' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_logwarning [hook]
            code: unused
            message: /usr/local/lib/python3.6/site-packages/paramiko/client.py:683: UserWarning: Unknown ssh-rsa host key for [127.0.0.1]:2222: b'404a24a7a831261db1f92c7825c755b4'
  (key.get_name(), hostname, hexlify(key.get_fingerprint())))

            nodeid: test/integration/default/testinfra/test_flask_port.py::test_port_8000_is_listening
            fslocation: ('test/integration/default/testinfra/test_flask_port.py', 0, 'test_port_8000_is_listening')
        finish pytest_logwarning --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_apache_server_is_running'>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: test/integration/default/testinfra/test_flask_port.py::test_apache_server_is_running
            location: ('test/integration/default/testinfra/test_flask_port.py', 4, 'test_apache_server_is_running')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_apache_server_is_running'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='tmpdir' scope='function' baseid='' >
              request: <SubRequest 'tmpdir' for <Function 'test_apache_server_is_running'>>
          mktemp /private/var/folders/fk/195yfz4d0dqgzvmrl79jwzn80000gn/T/pytest-of-akhterali/pytest-81/test_apache_server_is_running0 [config:tmpdir]
          finish pytest_fixture_setup --> /private/var/folders/fk/195yfz4d0dqgzvmrl79jwzn80000gn/T/pytest-of-akhterali/pytest-81/test_apache_server_is_running0 [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='host' scope='function' baseid='test' >
              request: <SubRequest 'host' for <Function 'test_apache_server_is_running'>>
          finish pytest_fixture_setup --> <testinfra.host.Host object at 0x109da9b70> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope='function' baseid='' >
              request: <SubRequest 'TestinfraBackend' for <Function 'test_apache_server_is_running'>>
          finish pytest_fixture_setup --> <testinfra.backend.paramiko.ParamikoBackend object at 0x109da9a58> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='Service' scope='function' baseid='' >
              request: <SubRequest 'Service' for <Function 'test_apache_server_is_running'>>
          find_module called for: testinfra.modules.service [assertion]
          matched marked file 'testinfra.modules.service' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/local/lib/python3.6/site-packages/testinfra/modules/service.py' [assertion]
          finish pytest_fixture_setup --> <class 'testinfra.modules.base.SysvService'> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_apache_server_is_running'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_apache_server_is_running' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_apache_server_is_running' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_apache_server_is_running' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_apache_server_is_running'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_apache_server_is_running'>
      find_module called for: py._io.saferepr [assertion]
      find_module called for: repr [assertion]
        pytest_runtest_makereport [hook]
            item: <Function 'test_apache_server_is_running'>
            call: <CallInfo when='call' exception: Unexpected exit code 127 for CommandResult(command=b'service httpd status', exit_status=127, stdout=None, stderr=b'bash: service: command not found\n')>
        finish pytest_runtest_makereport --> <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_apache_server_is_running' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_apache_server_is_running' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_apache_server_is_running' when='call' outcome='failed'>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function 'test_apache_server_is_running'>
            call: <CallInfo when='call' exception: Unexpected exit code 127 for CommandResult(command=b'service httpd status', exit_status=127, stdout=None, stderr=b'bash: service: command not found\n')>
            report: <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_apache_server_is_running' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_apache_server_is_running'>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='Service' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='Service' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='host' scope='function' baseid='test' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='host' scope='function' baseid='test' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='tmpdir' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='tmpdir' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='tmpdir' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='tmpdir_factory' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='tmpdir_factory' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_apache_server_is_running'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_apache_server_is_running' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_apache_server_is_running' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test/integration/default/testinfra/test_flask_port.py::test_apache_server_is_running' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_logwarning [hook]
            code: unused
            message: /usr/local/lib/python3.6/site-packages/paramiko/client.py:683: UserWarning: Unknown ssh-rsa host key for [127.0.0.1]:2222: b'404a24a7a831261db1f92c7825c755b4'
  (key.get_name(), hostname, hexlify(key.get_fingerprint())))

            nodeid: test/integration/default/testinfra/test_flask_port.py::test_apache_server_is_running
            fslocation: ('test/integration/default/testinfra/test_flask_port.py', 4, 'test_apache_server_is_running')
        finish pytest_logwarning --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session 'base'>
        exitstatus: 1
    cache-write cache/lastfailed: {'test/integration/default/testinfra/test_flask_port.py::test_apache_server_is_running': True} [cache]
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x1092c7160>
          exitstatus: 1
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x108dc46a0>
    finish pytest_unconfigure --> [] [hook]
  finish [config:tmpdir]
